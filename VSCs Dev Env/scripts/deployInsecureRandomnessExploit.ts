import { Address, beginCell, toNano } from '@ton/core';
import { compile, NetworkProvider } from '@ton/blueprint';

import { InsecureRandomness } from '../wrappers/InsecureRandomness';
import { InsecureRandomnessExploit } from '../wrappers/InsecureRandomnessExploit';

// yarn blueprint run LotteryExploit --testnet --mnemonic
export async function run(provider: NetworkProvider) {
    const code = await compile('InsecureRandomness');
    const exploit = await compile('InsecureRandomnessExploit');

    const insecureRandomness = provider.open(InsecureRandomness.createFromConfig({}, code));
    await insecureRandomness.sendDeploy(provider.sender(), toNano('1'));
    await provider.waitForDeploy(insecureRandomness.address);

    const insecureRandomnessExploit = provider.open(InsecureRandomnessExploit.createFromConfig({}, exploit));
    await insecureRandomnessExploit.sendDeploy(provider.sender(), toNano('10'));
    await provider.waitForDeploy(insecureRandomnessExploit.address);

    console.log(insecureRandomnessExploit.address);

    await insecureRandomnessExploit.sendExternal(beginCell().endCell());
}
